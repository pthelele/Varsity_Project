
import java.awt.Color;
import java.awt.HeadlessException;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


public class Fuel_Info extends javax.swing.JFrame {

    /**
     * Creates new form Fuel_Info
     */
    public Fuel_Info() {
        initComponents();
        
        txtFuelType.setEnabled(false);
        txtPrice.setEnabled(false);
        User user = new User();
        ClassDao staff = new ClassDao();
        Staff details = new Staff();
        
        try
        {
            staff.openConnection();
            
            details = staff.retrieveEmployee(user.getIdLogger());
            jLblUser.setText(details.getFname() + " " + details.getLname());
        }catch(ClassNotFoundException | SQLException ex)
        {
            JOptionPane.showMessageDialog(null, "Connectio Lost: " + ex.getLocalizedMessage());
        }
        
        cmbFuels.removeAllItems();
        cmbUpdater.removeAllItems();
        cmbFuelId.removeAllItems();
        
        FuelDAO fuel = new FuelDAO();
        ArrayList<Fuel> idType = new ArrayList<Fuel>();
        Fuel fuelClass = new Fuel();
        
        try
        {
            fuel.openConn();
            idType = fuel.getFuelType();
            
            for(int y = 0; y < idType.size(); y ++)
            {
                fuelClass = idType.get(y);
                cmbFuels.addItem(fuelClass.getFuel_id()+": " +fuelClass.getFuel_type());
                cmbUpdater.addItem(fuelClass.getFuel_id()+": " +fuelClass.getFuel_type());
                cmbFuelId.addItem(fuelClass.getFuel_id());
            }
            
            fuel.closeConn();
        }catch(ClassNotFoundException ce)
        {
            
            JOptionPane.showMessageDialog(null, "Connection Failure: " + ce.getMessage());
        }catch(SQLException ex)
        {
            JOptionPane.showMessageDialog(null, "Connection Failure: " + ex.getMessage());
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        fuelType = new javax.swing.JTextField();
        fuel_price = new javax.swing.JTextField();
        btnAddFuel = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        cmbFuels = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        btnRemove = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        cmbFuelId = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblFuelInfo = new javax.swing.JTable();
        btnListAll = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        chkUpdateFuel = new javax.swing.JCheckBox();
        chkPrice = new javax.swing.JCheckBox();
        jLabel4 = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JButton();
        txtFuelType = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtPrice = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        cmbUpdater = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        jLblUser = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        menue1 = new javax.swing.JMenu();
        manPanel1 = new javax.swing.JMenuItem();
        FuelPanel1 = new javax.swing.JMenuItem();
        manTank1 = new javax.swing.JMenuItem();
        empPanel1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Fuel Management:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("MV Boli", 1, 14))); // NOI18N

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Insert Fuel Info:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("MV Boli", 1, 12))); // NOI18N

        jLabel1.setText("Fuel Type:");

        jLabel2.setText("Fuel Price(R):");

        fuelType.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                fuelTypeKeyTyped(evt);
            }
        });

        fuel_price.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                fuel_priceKeyTyped(evt);
            }
        });

        btnAddFuel.setText("Add Fuel");
        btnAddFuel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddFuelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(btnAddFuel)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fuelType)
                            .addComponent(fuel_price))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fuelType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(fuel_price, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnAddFuel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Remove Fuel:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("MV Boli", 1, 12))); // NOI18N

        jLabel3.setText("Fuel Type:");

        btnRemove.setText("Remove");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmbFuels, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(btnRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 51, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbFuels, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addComponent(btnRemove)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Search Fuel Info:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("MV Boli", 1, 12))); // NOI18N

        cmbFuelId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbFuelIdActionPerformed(evt);
            }
        });

        tblFuelInfo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Fuel ID:", "Fuel Type", "Fuel Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblFuelInfo);

        btnListAll.setText("List All");
        btnListAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListAllActionPerformed(evt);
            }
        });

        jLabel8.setText("Fuel Id:");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cmbFuelId, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(146, 146, 146)
                        .addComponent(btnListAll, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cmbFuelId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnListAll)
                .addGap(6, 6, 6))
        );

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Update Fuel Info:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("MV Boli", 1, 12))); // NOI18N

        chkUpdateFuel.setText("Update Fuel Type:");
        chkUpdateFuel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chkUpdateFuelMouseClicked(evt);
            }
        });
        chkUpdateFuel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkUpdateFuelActionPerformed(evt);
            }
        });

        chkPrice.setText("Update Fuel Price");
        chkPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkPriceActionPerformed(evt);
            }
        });

        jLabel4.setText("Fuel ID:");

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        txtFuelType.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtFuelTypeKeyTyped(evt);
            }
        });

        jLabel5.setText("Fuel Type:");

        txtPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPriceKeyTyped(evt);
            }
        });

        jLabel6.setText("Fuel Price:");

        cmbUpdater.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbUpdaterActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtFuelType)
                            .addComponent(cmbUpdater, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(btnUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtPrice, javax.swing.GroupLayout.DEFAULT_SIZE, 89, Short.MAX_VALUE))
                                .addGap(0, 76, Short.MAX_VALUE))))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chkUpdateFuel)
                            .addComponent(chkPrice))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbUpdater, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addComponent(chkUpdateFuel)
                .addGap(18, 18, 18)
                .addComponent(chkPrice)
                .addGap(15, 15, 15)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtFuelType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addComponent(btnUpdate)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel10.setText("User:");

        jLblUser.setText("Employee Name");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10)
                .addGap(37, 37, 37)
                .addComponent(jLblUser)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLblUser))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))))
                .addGap(28, 28, 28))
        );

        menue1.setText("Menu");

        manPanel1.setText("Manager Panel");
        manPanel1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manPanel1ActionPerformed(evt);
            }
        });
        menue1.add(manPanel1);

        FuelPanel1.setText("Tank Info");
        FuelPanel1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FuelPanel1ActionPerformed(evt);
            }
        });
        menue1.add(FuelPanel1);

        manTank1.setText("Dispensers");
        manTank1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manTank1ActionPerformed(evt);
            }
        });
        menue1.add(manTank1);

        empPanel1.setText("Manage Employees");
        empPanel1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                empPanel1ActionPerformed(evt);
            }
        });
        menue1.add(empPanel1);

        jMenuBar1.add(menue1);

        jMenu2.setText("Logout");
        jMenu2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu2MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu2);

        jMenu3.setText("Exit");
        jMenu3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu3MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jMenu3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu3MouseClicked
        System.exit(1);
    }//GEN-LAST:event_jMenu3MouseClicked

    private void jMenu2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu2MouseClicked
        Login_Form logout = new Login_Form();
        this.dispose();
        logout.show();
    }//GEN-LAST:event_jMenu2MouseClicked

    private void btnAddFuelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddFuelActionPerformed

        
        
        FuelDAO fuel = new FuelDAO();
        ArrayList<Fuel> idType = new ArrayList<Fuel>();
        Fuel fuelClass = new Fuel();
        
        try
        {
            fuel.openConn();
            double price = Double.parseDouble(fuel_price.getText());
            if(!fuelType.getText().trim().isEmpty())
            {
                fuelType.setBackground(Color.white);
                if(price >= 9.50 && price <= 20.00)
                 {
                     fuel_price.setBackground(Color.white);
                     int rowAff =  fuel.insertFuels(fuelType.getText(), price);
                     if(rowAff > 0)
                     {
                        JOptionPane.showMessageDialog(null, fuelType.getText() + " added successfully");

                        fuelClass = fuel.getByFuel(fuelType.getText());
                        cmbFuels.addItem(fuelClass.getFuel_id()+": "+fuelClass.getFuel_type());
                        cmbFuelId.addItem(fuelClass.getFuel_id());                       
                        cmbUpdater.addItem(fuelClass.getFuel_id() + ": " + fuelClass.getFuel_type());
                        fuelType.setText("");
                        fuel_price.setText("");
                     }
                     else
                     {
                         JOptionPane.showMessageDialog(null, fuelType.getText() + " could not be added please try again with  the correct inputs");
                     }

                 }
                else
                {
                    JOptionPane.showMessageDialog(null, "Minimum price is: R9.50 and maximum is: R20.00 Please set price within range");
                    //fuel_price.setText("");
                    fuel_price.setBackground(Color.orange);
                }
            }
            else
            {
                JOptionPane.showMessageDialog(null, "fuel type field must be filled in");
                fuelType.setBackground(Color.orange);
            }
            
        }catch(ClassNotFoundException | SQLException | NumberFormatException | HeadlessException cle)
        {
            JOptionPane.showMessageDialog(null, cle.getMessage());
        }catch(NullPointerException cle)
        {
            JOptionPane.showMessageDialog(null, "Fuel Price fiel is empty, please enter numeric price between 9.50 and 20");
        }
    }//GEN-LAST:event_btnAddFuelActionPerformed

    private void btnListAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListAllActionPerformed
     
        DefaultTableModel model= (DefaultTableModel) tblFuelInfo.getModel();
                 model.setRowCount(0);
                 
        FuelDAO fuel = new FuelDAO();
        ArrayList<Fuel> fuelInfo = new ArrayList<Fuel>();
        Fuel vals = new Fuel();
        try{
            fuel.openConn();
            
            fuelInfo = fuel.getFuelType();
            
            model.setRowCount(fuelInfo.size());
            
            for(int i = 0; i < fuelInfo.size(); i ++)
            {
                vals = fuelInfo.get(i);
                
                tblFuelInfo.setValueAt(vals.getFuel_id(), i, 0);
                tblFuelInfo.setValueAt(vals.getFuel_type(), i, 1);
                tblFuelInfo.setValueAt(vals.getFuel_price(), i, 2);
            }
            
        }catch(SQLException | ClassNotFoundException found)
        {
            JOptionPane.showMessageDialog(null, "Not Connected: " + found.getMessage());
        }
    }//GEN-LAST:event_btnListAllActionPerformed

    private void chkUpdateFuelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chkUpdateFuelMouseClicked
        
    }//GEN-LAST:event_chkUpdateFuelMouseClicked

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
            FuelDAO dao = new FuelDAO();
            ArrayList<Fuel> idType = new ArrayList<Fuel>();
        
        
            
            
            int test = JOptionPane.showConfirmDialog(null, "Are you sure you want to remove: " + cmbFuels.getSelectedItem().toString().substring(3));
            if(test == 0)
            {
                try
                {
                    dao.openConn();
                    int row = dao.removeFuel(cmbFuels.getSelectedItem().toString().substring(0,2));
                    if(row > 0)
                    {
                    int index = cmbFuels.getSelectedIndex();
                    JOptionPane.showMessageDialog(null, row + " row removed successfully");




                            cmbFuels.removeItemAt(index);                            
                            cmbUpdater.removeItemAt(index);
                            cmbFuelId.removeItemAt(index);

                    }



                }catch(ClassNotFoundException | SQLException ce)
                {
                    JOptionPane.showMessageDialog(null, "Connection Failure " + ce.getMessage());
                }
        }
    }//GEN-LAST:event_btnRemoveActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        DefaultTableModel model =  (DefaultTableModel) tblFuelInfo.getModel();
        FuelDAO dao = new FuelDAO();
         ArrayList<Fuel> idType = new ArrayList<Fuel>();
     
        
        try
        {
            dao.openConn();
            int row = 0;
            
            if(chkUpdateFuel.isSelected() && chkPrice.isSelected())
            {
                if(!txtFuelType.getText().trim().isEmpty() &&  isAlphaNumeric(txtFuelType.getText().trim()))
                {
                    
                    txtFuelType.setBackground(Color.white);
                    
                    double price = Double.parseDouble(txtPrice.getText());
                   
                    int change = JOptionPane.showConfirmDialog(null, "Are you sure you want to update " + cmbUpdater.getSelectedItem().toString().substring(3));
                  
                    if(change == 0)
                    {
                        row =  dao.updateInfo(txtFuelType.getText(), Double.parseDouble(txtPrice.getText()), cmbUpdater.getSelectedItem().toString().substring(0,2));
                        if(row > 0)
                        {
                            JOptionPane.showMessageDialog(null, cmbUpdater.getSelectedItem().toString().substring(0,4) + "Updated Successfully");
                            chkUpdateFuel.doClick();
                            chkPrice.doClick();
                            txtFuelType.setText("");
                            txtPrice.setText("");
                            
                            dao.openConn();
                            idType = dao.getFuelType();
                            cmbUpdater.removeAllItems();
                            
                            for(Fuel f : idType)
                            {
                                cmbUpdater.addItem(f.getFuel_id() + ": " + f.getFuel_type());
                            }
                            dao.closeConn();
                        }
                        else
                        {
                            JOptionPane.showMessageDialog(null, "Updates failed");
                        }
                    }
                }
                else
                {
                    JOptionPane.showMessageDialog(null, "Please enter alphanumeric charaters in the fuel type field");
                    txtFuelType.setBackground(Color.orange);
                }
                
            }
            else if(chkUpdateFuel.isSelected())
            {
                String fuelT = cmbUpdater.getSelectedItem().toString().trim().substring(0,2);
                if(!txtFuelType.getText().trim().isEmpty() &&  isAlphaNumeric(txtFuelType.getText().trim()))
                {
                    int check = JOptionPane.showConfirmDialog(rootPane, "Are you sure you want to change " + cmbUpdater.getSelectedItem().toString().substring(0,2) + " to " + txtFuelType.getText());
                    if(check == 0)
                    {
                        row = dao.updateInfo(txtFuelType.getText(), cmbUpdater.getSelectedItem().toString().substring(0,2));
                        
                        JOptionPane.showMessageDialog(null, cmbUpdater.getSelectedItem().toString().substring(0,4) + "Updated Successfully");
                        chkUpdateFuel.doClick();
                        txtFuelType.setText("");
                        
                        
                            dao.openConn();
                            idType = dao.getFuelType();
                            cmbUpdater.removeAllItems();
                            cmbFuels.removeAllItems();
                            
                            for(Fuel f : idType)
                            {
                                cmbUpdater.addItem(f.getFuel_id() + ": " + f.getFuel_type());
                                cmbFuels.addItem(f.getFuel_id() + ": " + f.getFuel_type());
                                
                            }
                            dao.closeConn();
                        
                            
                    }
                   
                    
                }
                else
                {
                    JOptionPane.showMessageDialog(null, "Please enter alphanumeric charaters in the fuel type field");
                    txtFuelType.setBackground(Color.orange);
                }
            }
            else if(chkPrice.isSelected())
            {
                  int decider = JOptionPane.showConfirmDialog(null, "Are you sure you want to update fuel price for " + cmbUpdater.getSelectedItem().toString().substring(4));
                  if(decider == 0)
                  {
                            row = dao.updateInfo(Double.parseDouble(txtPrice.getText().trim()), cmbUpdater.getSelectedItem().toString().substring(0,2));
                        if(row > 0)
                        {
                            JOptionPane.showMessageDialog(null, cmbUpdater.getSelectedItem().toString().substring(4)+ " Updated successfully");
                            chkPrice.doClick();
                            txtFuelType.setText("");
                            txtPrice.setText("");
                        }
                        else
                        {
                           JOptionPane.showMessageDialog(null, cmbUpdater.getSelectedItem().toString().substring(4)+ " Updates fail");

                        }
                  }
                  
            }
            else
            {
                btnUpdate.setEnabled(false);
            }
            
            if(row > 0)
            {
                model.setRowCount(0);
            }
        }catch(ClassNotFoundException ce)
        {
            JOptionPane.showMessageDialog(null, "Connection Failure: " + ce.getMessage());
        }catch(SQLException e)
        {
            JOptionPane.showMessageDialog(null, "Connection Failure: " + e.getMessage());
        }catch(NumberFormatException e)
        {
            JOptionPane.showMessageDialog(null, "Invalid entry for price field, please ensure price field is not empty and contains numeric characters");
            txtPrice.setBackground(Color.orange);
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void chkUpdateFuelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkUpdateFuelActionPerformed
        
        
        if(chkUpdateFuel.isSelected())
        {
             
          this.txtFuelType.setEnabled(true);
        }
        else
        {
            this.txtFuelType.setEnabled(false);
        }
        
    }//GEN-LAST:event_chkUpdateFuelActionPerformed

    private void cmbFuelIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbFuelIdActionPerformed
        DefaultTableModel model= (DefaultTableModel) tblFuelInfo.getModel();
                 model.setRowCount(0);
                 
                 
        FuelDAO fuel = new FuelDAO();
        
        Fuel fuelClass = new Fuel();
        
        try
        {
            fuel.openConn();
            
            if(!cmbFuelId.getSelectedItem().toString().trim().isEmpty())
            {
                fuelClass = fuel.getFuel(cmbFuelId.getSelectedItem().toString());
                model.setRowCount(1);
                this.tblFuelInfo.setValueAt(fuelClass.getFuel_id(), 0, 0);
                this.tblFuelInfo.setValueAt(fuelClass.getFuel_type(), 0, 1);
                this.tblFuelInfo.setValueAt(fuelClass.getFuel_price(), 0, 2);
            }
                
                        
            
        }catch(ClassNotFoundException | SQLException ex)
        {
            JOptionPane.showMessageDialog(null, "Connection Loat: " + ex.getMessage());
        }
    }//GEN-LAST:event_cmbFuelIdActionPerformed

    private void chkPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkPriceActionPerformed
        
            if(chkPrice.isSelected())
        {
             
          this.txtPrice.setEnabled(true);
        }
        else
        {
            this.txtPrice.setEnabled(false);
        }
    }//GEN-LAST:event_chkPriceActionPerformed

    private void fuelTypeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fuelTypeKeyTyped
       if(fuelType.getText().length() > 14)
       {
           evt.consume();
       }
    }//GEN-LAST:event_fuelTypeKeyTyped

    private void fuel_priceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fuel_priceKeyTyped
        
        if(fuel_price.getText().length() > 14)
        {
            evt.consume();
        }
    }//GEN-LAST:event_fuel_priceKeyTyped

    private void cmbUpdaterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbUpdaterActionPerformed
        if(chkPrice.isSelected())
        {
            chkPrice.doClick();
        }
        
        if(chkUpdateFuel.isSelected())
        {
            chkUpdateFuel.doClick();
        }
        txtFuelType.setText("");
        txtPrice.setText("");
    }//GEN-LAST:event_cmbUpdaterActionPerformed

    private void manPanel1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manPanel1ActionPerformed
        Manager_Panel manPanel = new Manager_Panel();
        this.dispose();
        manPanel.setVisible(true);
    }//GEN-LAST:event_manPanel1ActionPerformed

    private void FuelPanel1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FuelPanel1ActionPerformed
        Tank_Info TankPane = new Tank_Info();
        this.dispose();
        TankPane.setVisible(true);
    }//GEN-LAST:event_FuelPanel1ActionPerformed

    private void manTank1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manTank1ActionPerformed

        FuelDAO tankTest = new FuelDAO();
        ArrayList<Fuel> tank = new ArrayList<Fuel>();
        ArrayList<String> fuelAvail = new ArrayList<String>();
        try
        {
            tankTest.openConn();
            tank = tankTest.getFuelInTank();
            
           if(tank.size() > 0)
           {
               Dispenser_form dispForm = new Dispenser_form();
               this.dispose();
               dispForm.setVisible(true);
           }
           else
           {
               int test = JOptionPane.showConfirmDialog(null, "Fuel tanks are empty, click yes to fill tanks with fuel");
               if(test == 0)
               {
                   Tank_Info tInfo = new Tank_Info();
                   this.dispose();
                   tInfo.setVisible(true);
               }
               else
               {
                   
               }
           }
            
            
            
            
        }catch(ClassNotFoundException | SQLException ex)
        {
            JOptionPane.showMessageDialog(null, "Connection Lost: " + ex.getLocalizedMessage());
        }
    }//GEN-LAST:event_manTank1ActionPerformed

    private void empPanel1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_empPanel1ActionPerformed
        Manage_Employees empMan = new Manage_Employees();
        this.dispose();
        empMan.setVisible(true);
    }//GEN-LAST:event_empPanel1ActionPerformed

    private void txtFuelTypeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFuelTypeKeyTyped
        
        if(txtFuelType.getText().length() > 20)
        {
            evt.consume();
        }
    }//GEN-LAST:event_txtFuelTypeKeyTyped

    private void txtPriceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPriceKeyTyped
        if(txtPrice.getText().length() > 7)
        {
            evt.consume();
        }
    }//GEN-LAST:event_txtPriceKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Fuel_Info.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Fuel_Info.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Fuel_Info.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Fuel_Info.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Fuel_Info().setVisible(true);
            }
        });
    }
    
    
    public boolean isAlphaNumeric(String s){
    String pattern= "^[ a-zA-Z0-9]*$";
        if(s.matches(pattern)){
            return true;
        }
        return false;   
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem FuelPanel1;
    private javax.swing.JButton btnAddFuel;
    private javax.swing.JButton btnListAll;
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JCheckBox chkPrice;
    private javax.swing.JCheckBox chkUpdateFuel;
    private javax.swing.JComboBox cmbFuelId;
    private javax.swing.JComboBox cmbFuels;
    private javax.swing.JComboBox cmbUpdater;
    private javax.swing.JMenuItem empPanel1;
    private javax.swing.JTextField fuelType;
    private javax.swing.JTextField fuel_price;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLblUser;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuItem manPanel1;
    private javax.swing.JMenuItem manTank1;
    private javax.swing.JMenu menue1;
    private javax.swing.JTable tblFuelInfo;
    private javax.swing.JTextField txtFuelType;
    private javax.swing.JTextField txtPrice;
    // End of variables declaration//GEN-END:variables
}
