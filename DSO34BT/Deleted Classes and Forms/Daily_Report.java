
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.io.FileOutputStream;
import java.util.Date;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Chapter;
import com.itextpdf.text.Document;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.Section;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.text.DecimalFormat;
import java.io.File;
import java.io.IOException;
import jxl.Workbook;
import jxl.write.WritableSheet;
import jxl.write.WritableWorkbook;



public class Daily_Report extends javax.swing.JFrame {

    private static String idNum;
    private String reportDate;
    private User user;
    private ClassDao empDetails;
    private Staff staff;
    private ArrayList<DailyReportClass> listRep;
    
    
    //PDF data members
    
     private static String FILE = "DailyReport.pdf";
     private static Font catFont = new Font(Font.FontFamily.TIMES_ROMAN, 18,
                        Font.BOLD);
     private static Font redFont = new Font(Font.FontFamily.TIMES_ROMAN, 12,
                        Font.NORMAL, BaseColor.RED);
     private static Font subFont = new Font(Font.FontFamily.TIMES_ROMAN, 16,
                        Font.BOLD);
     private static Font smallBold = new Font(Font.FontFamily.TIMES_ROMAN, 12,
                        Font.BOLD);
    
    public Daily_Report() {
        initComponents();
        fDispensed.setEditable(false);
        jPrintButton.setEnabled(false);
          user = new User();
        this.idNum = user.getIdLogger();
        
        empDetails = new ClassDao();
         staff = new Staff();
        
        try
        {
            empDetails.openConnection();
            staff = empDetails.retrieveEmployee(idNum);
            userNames.setText(staff.getFname() + " " + staff.getLname());
            
            empDetails.closeConnection();
        }catch(ClassNotFoundException | SQLException ex)
        {
            JOptionPane.showMessageDialog(null, "Connection Lost: " + ex.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jCalendar1 = new com.toedter.calendar.JCalendar();
        jLabel2 = new javax.swing.JLabel();
        fuelDispensed = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        fDispensed = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDailyReport = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        userNames = new javax.swing.JLabel();
        fileSelecter = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jPrintButton = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Daily Report:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("MV Boli", 1, 14))); // NOI18N

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Choose Date:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("MV Boli", 0, 12))); // NOI18N

        jCalendar1.setBackground(new java.awt.Color(255, 255, 255));
        jCalendar1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jCalendar1PropertyChange(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/reports.jpeg"))); // NOI18N

        fuelDispensed.setText("Fuel Dispensed");
        fuelDispensed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fuelDispensedActionPerformed(evt);
            }
        });

        jLabel4.setText("FuelDispensed: ");

        jLabel5.setText("Litres");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jCalendar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fDispensed, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(fuelDispensed)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(79, 79, 79))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jCalendar1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE))
                .addGap(5, 5, 5))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(fDispensed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addComponent(fuelDispensed)
                .addContainerGap())
        );

        tblDailyReport.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Employee Name", "Employee ID", "Fuel Dispensed", "Fuel_Type", "Dispenser", "Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblDailyReport);

        jLabel3.setText("User:");

        userNames.setText("Employee Name");

        fileSelecter.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "PDF File", "Word Doc", "Spread Sheet", "Text File" }));

        jLabel1.setText("Export To:");

        jButton1.setText("Display");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPrintButton.setText("Print");
        jPrintButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPrintButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(28, 28, 28)
                                .addComponent(userNames))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(84, 84, 84)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(46, 46, 46)
                                .addComponent(fileSelecter, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(51, 51, 51)
                                .addComponent(jPrintButton, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 155, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(userNames))
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 204, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jButton1)
                    .addComponent(fileSelecter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPrintButton))
                .addGap(14, 14, 14))
        );

        jMenu4.setText("Navigation");

        jMenuItem7.setText("Home");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem7);

        jMenuItem8.setText("Logout");
        jMenu4.add(jMenuItem8);

        jMenuBar1.add(jMenu4);

        jMenu1.setText("Report");

        jMenuItem4.setText("Employee Report");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuItem1.setText("Performance Report");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem3.setText("Service Report");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Exit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       
        DailyReportDAO report = new DailyReportDAO();
        ArrayList<DailyReportClass> reportList = new   ArrayList<DailyReportClass>();
         DefaultTableModel model= (DefaultTableModel) tblDailyReport.getModel();
                 model.setRowCount(0);
        
        try
        {
            report.openConn();
            reportList = report.getDailyReport(reportDate);
            model.setRowCount(reportList.size());
            
           if(reportList.size() < 1)
           {
               JOptionPane.showMessageDialog(null, "No records for the specified date");
           }
           else
           {
               
            for(int i = 0; i < reportList.size(); i ++)
                {
                  tblDailyReport.setValueAt(reportList.get(i).getFname().substring(0, 1) + " " + reportList.get(i).getFname() , i, 0);
                  tblDailyReport.setValueAt(reportList.get(i).getEmpId(), i, 1);
                  tblDailyReport.setValueAt(reportList.get(i).getFuelDispensed(), i,2);
                  tblDailyReport.setValueAt(reportList.get(i).getFuelType(), i, 3);
                  tblDailyReport.setValueAt(reportList.get(i).getDispenserId(), i, 4);
                  tblDailyReport.setValueAt(reportList.get(i).getDate().substring(0, 10), i, 5);
                }
            jPrintButton.setEnabled(true);
            listRep = new ArrayList<>();
            listRep = reportList;
           }
            
        }catch(Exception ex)
        {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
                 
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jCalendar1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jCalendar1PropertyChange
       Date rDate = jCalendar1.getDate();
        
        DateFormat dateF = new SimpleDateFormat("yyyy-MM-dd");
        this.reportDate = dateF.format(rDate);
        
    }//GEN-LAST:event_jCalendar1PropertyChange

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        Manager_Panel manP = new Manager_Panel();
        this.dispose();
        manP.setVisible(true);
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        Performance_Report peyRe = new Performance_Report();
        this.dispose();
        peyRe
                .setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed

        Service_Report serviceReport = new Service_Report();
        this.dispose();
        serviceReport.setVisible(true);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        Employee_Report empReport = new Employee_Report();
        this.dispose();
        empReport.setVisible(true);
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jPrintButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPrintButtonActionPerformed
         /*setting path for a file   
        
         JFileChooser r = new JFileChooser();
                          // r.OPEN_DIALOG
                          r.showSaveDialog(null);
            */
            String fileName = "C:\\Users\\" + System.getProperty("user.name") + "\\Desktop\\";  // Enable to set path to save in my documrnts
            
        try{
            
             String fileN = JOptionPane.showInputDialog("Please name of your report file");
                if(!fileN.trim().isEmpty())
                {
                    if(fileSelecter.getSelectedItem().toString().equalsIgnoreCase("PDF File"))
                    {
                          JOptionPane.showMessageDialog(null, "PDF File chosen");
                          fileName = fileName + fileN + ".pdf";
                          
                          
                          
                      try
                      {
                          Document doc = new Document();
                          PdfWriter.getInstance(doc, new FileOutputStream(fileName));
                          doc.open();
                          //Metadata
                          doc.addTitle("Daily Report File");
                          doc.addSubject("For Petrol Station");
                          SimpleDateFormat df = new SimpleDateFormat("YYYY-M-D");
                          String date = df.format(new Date());
                          doc.addKeywords("Date: " + date);
                          doc.addAuthor(staff.getFname() + " " + staff.getLname());
                          doc.addCreator(staff.getFname() + " " + staff.getLname());
                          
                          Paragraph pageTitle = new Paragraph(" ");
                          pageTitle.add(new Paragraph("Daily Report", catFont));
                          pageTitle.add(new Paragraph("Daily Report by: " + staff.getFname() + " " + staff.getLname(), smallBold));
                          pageTitle.add(new Paragraph("Date: " + new Date(), smallBold));
                          
                          addEmptyLine( pageTitle, 3);
                         

                           PdfPTable table = new PdfPTable(6);
                           PdfPCell column = new PdfPCell(new Phrase("Employee Names"));
                           column.setHorizontalAlignment(Element.ALIGN_CENTER);
                           table.addCell(column);
                           column = new PdfPCell(new Phrase("Employee ID"));
                           column.setHorizontalAlignment(Element.ALIGN_CENTER);
                           table.addCell(column);
                           column = new PdfPCell(new Phrase("Fuel Dispensed"));
                           column.setHorizontalAlignment(Element.ALIGN_CENTER);
                           table.addCell(column);
                           column = new PdfPCell(new Phrase("Fuel Type"));
                           column.setHorizontalAlignment(Element.ALIGN_CENTER);
                           table.addCell(column);
                           column = new PdfPCell(new Phrase("Dispenser"));
                           column.setHorizontalAlignment(Element.ALIGN_CENTER);
                           table.addCell(column);
                           column = new PdfPCell(new Phrase("Date"));
                           column.setHorizontalAlignment(Element.ALIGN_CENTER);
                           table.addCell(column);
                           
                           table.setHeaderRows(listRep.size());
                           
                           for (DailyReportClass currentFuel : listRep)
                           {
                               String valDispenser = String.valueOf(currentFuel.getFuelDispensed());
                               table.addCell(currentFuel.getFname().subSequence(0, 1) + currentFuel.getLname());
                               table.addCell(currentFuel.getEmpId());
                               table.addCell(valDispenser);
                               table.addCell(currentFuel.getFuelType());
                               table.addCell(currentFuel.getDispenserId());
                               table.addCell(currentFuel.getDate());
                               
                           }
                           
                        
                           Chapter catPart = new Chapter(new Paragraph(), 0);
                 
                Section subCatPart = catPart.addSection(pageTitle);
                subCatPart.add(new Paragraph(""));
                
                           subCatPart.add(table);
                           ;
                            doc.add(catPart);
                            
                           doc.close();
                           JOptionPane.showMessageDialog(null, "PDF written and saved at ");
                          
                      }catch(Exception ex)
                      {
                          JOptionPane.showMessageDialog(null, ex.getMessage());
                      }
                    }
                    else if(fileSelecter.getSelectedItem().toString().equalsIgnoreCase("Spread Sheet"))
                    {
                           JOptionPane.showMessageDialog(null, "Spread File chosen");
                            fileName = fileName + fileN + ".xls";
                           System.getProperty("user.name");
                           WritableWorkbook wworkbook;
                           wworkbook = Workbook.createWorkbook(new File(fileName));
                           WritableSheet reportSheet = wworkbook.createSheet("First Sheet", 0);
                    }
                    
                    else if(fileSelecter.getSelectedItem().toString().equalsIgnoreCase("Word Doc"))
                    {
                        JOptionPane.showMessageDialog(null, "Word File chosen");
                           fileName =  fileN+ ".docx";
                           
                           JOptionPane.showMessageDialog(null, "Word document Print succesful");
                    }
                    else if(fileSelecter.getSelectedItem().toString().equalsIgnoreCase("text File"))
                    {
                        
                        fileName = fileN+ ".txt";
                        BufferedWriter bw = new BufferedWriter(new FileWriter(new File(fileName)));

                        DateFormat dateFormat = new SimpleDateFormat("yyyy-MMMM-dd");
                        Date date = new Date();
                        String datestring = dateFormat.format(date);
                        
                        bw.newLine();
                        bw.newLine();
                        bw.write("DAILY REPORT \t\t\t DATE: " +  datestring);
                        bw.newLine();
                        bw.write(staff.getFname() + " "+staff.getFname());
                        bw.newLine();
                        bw.write("Employee Names" + "\t" + "Employee ID" +"\t"+ "Fuel Dispensed\tFuel Type\tDispenser\tDate" );
                        bw.newLine();
                        
                        for (DailyReportClass currentFuel : listRep) {

                                  bw.write(currentFuel.getFname().substring(0,1)+ " " + currentFuel.getLname() + "\t" + currentFuel.getEmpId() +"\t"+ currentFuel.getFuelDispensed()+"\t"+ currentFuel.getFuelType()+"\t"+currentFuel.getDispenserId()+"\t\t\t"+ currentFuel.getDate());
                                  bw.newLine();
                              }
                             bw.close();
                             JOptionPane.showMessageDialog(null, "Text File Print succesful");
                    }
                }
                else
                {
                    int test = JOptionPane.showConfirmDialog(null, "File name empty, ensure you type alphanumeric characters, Click yes to re-enter");
                    if(test == 0)
                    {
                        jPrintButton.doClick();
                    }
                }
        }catch(Exception ex)
        {
            
        }
            
    }//GEN-LAST:event_jPrintButtonActionPerformed

    private void fuelDispensedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fuelDispensedActionPerformed
        
        DailyReportDAO reportDao = new DailyReportDAO();
        DailyReportClass reportClass = new DailyReportClass();
        DecimalFormat round = new DecimalFormat("#.##");
        try
        {
            reportDao.openConn();
            reportClass.setFuelDispensed(reportDao.getDispensed());
            double amount = Double.parseDouble(round.format(reportClass.getFuelDispensed()));
            
            fDispensed.setText(String.valueOf(amount));
        }catch(Exception ex)
        {
            JOptionPane.showMessageDialog(null, "Connection Lost: " + ex.getMessage());
        }
    }//GEN-LAST:event_fuelDispensedActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Daily_Report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Daily_Report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Daily_Report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Daily_Report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Daily_Report().setVisible(true);
            }
        });
    }
    
    public void addEmptyLine(Paragraph par, int num)
    {
      for(int i = 0; i < num; i ++)
      {
          par.add(new Paragraph(" "));
      }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField fDispensed;
    private javax.swing.JComboBox<String> fileSelecter;
    private javax.swing.JButton fuelDispensed;
    private javax.swing.JButton jButton1;
    private com.toedter.calendar.JCalendar jCalendar1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JButton jPrintButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblDailyReport;
    private javax.swing.JLabel userNames;
    // End of variables declaration//GEN-END:variables
}
